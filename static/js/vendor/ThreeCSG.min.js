window.ThreeBSP=function(){var c=function(a){var b,m=[];if(a instanceof THREE.Geometry)this.matrix=new THREE.Matrix4;else if(a instanceof THREE.Mesh)a.updateMatrix(),this.matrix=a.matrix.clone(),a=a.geometry;else{if(a instanceof c.Node)return this.tree=a,this.matrix=new THREE.Matrix4,this;throw"ThreeBSP: Given geometry is unsupported";}var f=0;for(b=a.faces.length;f<b;f++){var g=a.faces[f];var h=a.faceVertexUvs[0][f];var l=new c.Polygon;if(g instanceof THREE.Face3){var d=a.vertices[g.a];var k=h?new THREE.Vector2(h[0].x,
    h[0].y):null;d=new c.Vertex(d.x,d.y,d.z,g.vertexNormals[0],k);d.applyMatrix4(this.matrix);l.vertices.push(d);d=a.vertices[g.b];k=h?new THREE.Vector2(h[1].x,h[1].y):null;d=new c.Vertex(d.x,d.y,d.z,g.vertexNormals[1],k);d.applyMatrix4(this.matrix);l.vertices.push(d);d=a.vertices[g.c];k=h?new THREE.Vector2(h[2].x,h[2].y):null;d=new c.Vertex(d.x,d.y,d.z,g.vertexNormals[2],k);d.applyMatrix4(this.matrix);l.vertices.push(d)}else if(typeof THREE.Face4)d=a.vertices[g.a],k=h?new THREE.Vector2(h[0].x,h[0].y):
    null,d=new c.Vertex(d.x,d.y,d.z,g.vertexNormals[0],k),d.applyMatrix4(this.matrix),l.vertices.push(d),d=a.vertices[g.b],k=h?new THREE.Vector2(h[1].x,h[1].y):null,d=new c.Vertex(d.x,d.y,d.z,g.vertexNormals[1],k),d.applyMatrix4(this.matrix),l.vertices.push(d),d=a.vertices[g.c],k=h?new THREE.Vector2(h[2].x,h[2].y):null,d=new c.Vertex(d.x,d.y,d.z,g.vertexNormals[2],k),d.applyMatrix4(this.matrix),l.vertices.push(d),d=a.vertices[g.d],k=h?new THREE.Vector2(h[3].x,h[3].y):null,d=new c.Vertex(d.x,d.y,d.z,g.vertexNormals[3],
    k),d.applyMatrix4(this.matrix),l.vertices.push(d);else throw"Invalid face type at index "+f;l.calculateProperties();m.push(l)}this.tree=new c.Node(m)};c.prototype.subtract=function(a){var b=this.tree.clone();a=a.tree.clone();b.invert();b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();b.build(a.allPolygons());b.invert();b=new c(b);b.matrix=this.matrix;return b};c.prototype.union=function(a){var b=this.tree.clone();a=a.tree.clone();b.clipTo(a);a.clipTo(b);a.invert();a.clipTo(b);a.invert();
    b.build(a.allPolygons());b=new c(b);b.matrix=this.matrix;return b};c.prototype.intersect=function(a){var b=this.tree.clone();a=a.tree.clone();b.invert();a.clipTo(b);a.invert();b.clipTo(a);a.clipTo(b);b.build(a.allPolygons());b.invert();b=new c(b);b.matrix=this.matrix;return b};c.prototype.toGeometry=function(){var a,b,c=(new THREE.Matrix4).getInverse(this.matrix),f=new THREE.Geometry,g=this.tree.allPolygons(),h=g.length,l={};for(a=0;a<h;a++){var d=g[a];var k=d.vertices.length;for(b=2;b<k;b++){var n=
    [];var e=d.vertices[0];n.push(new THREE.Vector2(e.uv.x,e.uv.y));e=new THREE.Vector3(e.x,e.y,e.z);e.applyMatrix4(c);if("undefined"!==typeof l[e.x+","+e.y+","+e.z])var p=l[e.x+","+e.y+","+e.z];else f.vertices.push(e),p=l[e.x+","+e.y+","+e.z]=f.vertices.length-1;e=d.vertices[b-1];n.push(new THREE.Vector2(e.uv.x,e.uv.y));e=new THREE.Vector3(e.x,e.y,e.z);e.applyMatrix4(c);if("undefined"!==typeof l[e.x+","+e.y+","+e.z])var q=l[e.x+","+e.y+","+e.z];else f.vertices.push(e),q=l[e.x+","+e.y+","+e.z]=f.vertices.length-
    1;e=d.vertices[b];n.push(new THREE.Vector2(e.uv.x,e.uv.y));e=new THREE.Vector3(e.x,e.y,e.z);e.applyMatrix4(c);"undefined"!==typeof l[e.x+","+e.y+","+e.z]?e=l[e.x+","+e.y+","+e.z]:(f.vertices.push(e),e=l[e.x+","+e.y+","+e.z]=f.vertices.length-1);p=new THREE.Face3(p,q,e,new THREE.Vector3(d.normal.x,d.normal.y,d.normal.z));f.faces.push(p);f.faceVertexUvs[0].push(n)}}return f};c.prototype.toMesh=function(a){var b=this.toGeometry();a=new THREE.Mesh(b,a);a.position.setFromMatrixPosition(this.matrix);a.rotation.setFromRotationMatrix(this.matrix);
    return a};c.Polygon=function(a,b,c){a instanceof Array||(a=[]);this.vertices=a;0<a.length?this.calculateProperties():this.normal=this.w=void 0};c.Polygon.prototype.calculateProperties=function(){var a=this.vertices[0],b=this.vertices[2];this.normal=this.vertices[1].clone().subtract(a).cross(b.clone().subtract(a)).normalize();this.w=this.normal.clone().dot(a);return this};c.Polygon.prototype.clone=function(){var a,b=new c.Polygon;var m=0;for(a=this.vertices.length;m<a;m++)b.vertices.push(this.vertices[m].clone());
    b.calculateProperties();return b};c.Polygon.prototype.flip=function(){var a,b=[];this.normal.multiplyScalar(-1);this.w*=-1;for(a=this.vertices.length-1;0<=a;a--)b.push(this.vertices[a]);this.vertices=b;return this};c.Polygon.prototype.classifyVertex=function(a){a=this.normal.dot(a)-this.w;return-1E-5>a?2:1E-5<a?1:0};c.Polygon.prototype.classifySide=function(a){var b,c=0,f=0,g=a.vertices.length;for(b=0;b<g;b++){var h=a.vertices[b];h=this.classifyVertex(h);1===h?c++:2===h&&f++}return 0<c&&0===f?1:0===
    c&&0<f?2:0===c&&0===f?0:3};c.Polygon.prototype.splitPolygon=function(a,b,m,f,g){var h=this.classifySide(a);if(0===h)(0<this.normal.dot(a.normal)?b:m).push(a);else if(1===h)f.push(a);else if(2===h)g.push(a);else{h=[];var l=[];m=0;for(b=a.vertices.length;m<b;m++){var d=(m+1)%b;var k=a.vertices[m];d=a.vertices[d];var n=this.classifyVertex(k);var e=this.classifyVertex(d);2!=n&&h.push(k);1!=n&&l.push(k);3===(n|e)&&(n=(this.w-this.normal.dot(k))/this.normal.dot(d.clone().subtract(k)),k=k.interpolate(d,
    n),h.push(k),l.push(k))}3<=h.length&&f.push((new c.Polygon(h)).calculateProperties());3<=l.length&&g.push((new c.Polygon(l)).calculateProperties())}};c.Vertex=function(a,b,c,f,g){this.x=a;this.y=b;this.z=c;this.normal=f||new THREE.Vector3;this.uv=g||new THREE.Vector2};c.Vertex.prototype.clone=function(){return new c.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())};c.Vertex.prototype.add=function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this};c.Vertex.prototype.subtract=function(a){this.x-=
    a.x;this.y-=a.y;this.z-=a.z;return this};c.Vertex.prototype.multiplyScalar=function(a){this.x*=a;this.y*=a;this.z*=a;return this};c.Vertex.prototype.cross=function(a){var b=this.x,c=this.y,f=this.z;this.x=c*a.z-f*a.y;this.y=f*a.x-b*a.z;this.z=b*a.y-c*a.x;return this};c.Vertex.prototype.normalize=function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);this.x/=a;this.y/=a;this.z/=a;return this};c.Vertex.prototype.dot=function(a){return this.x*a.x+this.y*a.y+this.z*a.z};c.Vertex.prototype.lerp=
    function(a,b){this.add(a.clone().subtract(this).multiplyScalar(b));this.normal.add(a.normal.clone().sub(this.normal).multiplyScalar(b));this.uv.add(a.uv.clone().sub(this.uv).multiplyScalar(b));return this};c.Vertex.prototype.interpolate=function(a,b){return this.clone().lerp(a,b)};c.Vertex.prototype.applyMatrix4=function(a){var b=this.x,c=this.y,f=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*f+a[12];this.y=a[1]*b+a[5]*c+a[9]*f+a[13];this.z=a[2]*b+a[6]*c+a[10]*f+a[14];return this};c.Node=function(a){var b,
    m=[],f=[];this.polygons=[];this.front=this.back=void 0;if(a instanceof Array&&0!==a.length){this.divider=a[0].clone();var g=0;for(b=a.length;g<b;g++)this.divider.splitPolygon(a[g],this.polygons,this.polygons,m,f);0<m.length&&(this.front=new c.Node(m));0<f.length&&(this.back=new c.Node(f))}};c.Node.isConvex=function(a){var b,c;for(b=0;b<a.length;b++)for(c=0;c<a.length;c++)if(b!==c&&2!==a[b].classifySide(a[c]))return!1;return!0};c.Node.prototype.build=function(a){var b,m=[],f=[];this.divider||(this.divider=
    a[0].clone());var g=0;for(b=a.length;g<b;g++)this.divider.splitPolygon(a[g],this.polygons,this.polygons,m,f);0<m.length&&(this.front||(this.front=new c.Node),this.front.build(m));0<f.length&&(this.back||(this.back=new c.Node),this.back.build(f))};c.Node.prototype.allPolygons=function(){var a=this.polygons.slice();this.front&&(a=a.concat(this.front.allPolygons()));this.back&&(a=a.concat(this.back.allPolygons()));return a};c.Node.prototype.clone=function(){var a=new c.Node;a.divider=this.divider.clone();
    a.polygons=this.polygons.map(function(a){return a.clone()});a.front=this.front&&this.front.clone();a.back=this.back&&this.back.clone();return a};c.Node.prototype.invert=function(){var a;var b=0;for(a=this.polygons.length;b<a;b++)this.polygons[b].flip();this.divider.flip();this.front&&this.front.invert();this.back&&this.back.invert();b=this.front;this.front=this.back;this.back=b;return this};c.Node.prototype.clipPolygons=function(a){var b;if(!this.divider)return a.slice();var c=[];var f=[];var g=0;
    for(b=a.length;g<b;g++)this.divider.splitPolygon(a[g],c,f,c,f);this.front&&(c=this.front.clipPolygons(c));f=this.back?this.back.clipPolygons(f):[];return c.concat(f)};c.Node.prototype.clipTo=function(a){this.polygons=a.clipPolygons(this.polygons);this.front&&this.front.clipTo(a);this.back&&this.back.clipTo(a)};return c}();